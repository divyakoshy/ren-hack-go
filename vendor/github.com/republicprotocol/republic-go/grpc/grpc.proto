syntax = "proto3";

package grpc;

service SwarmService {
    rpc Ping (PingRequest) returns (PingResponse);
    rpc Query (QueryRequest) returns (stream QueryResponse);
}

message PingRequest {
    bytes  signature    = 1;
    string multiAddress = 2;
}

message PingResponse {
    bytes  signature    = 1;
    string multiAddress = 2;
}

message QueryRequest {
    bytes  signature = 1;
    string address   = 2;
}

message QueryResponse {
    bytes  signature    = 1;
    string multiAddress = 2;
}

service StreamService {
    rpc Connect(stream StreamMessage) returns (stream StreamMessage);
}

message StreamMessage {
    bytes  signature = 1;
    string address   = 2;
    bytes  network   = 3;
    bytes  data      = 4;
}

service OrderbookService {
    rpc OpenOrder(OpenOrderRequest) returns (OpenOrderResponse);
}

message OpenOrderRequest {
    EncryptedOrderFragment orderFragment = 1;
}

message OpenOrderResponse {
}

message EncryptedOrderFragment {
    bytes           orderId         = 1;
    OrderType       orderType       = 2;
    OrderParity     orderParity     = 3;
    OrderSettlement orderSettlement = 4;
    int64           orderExpiry     = 5;
    
    bytes               id            = 6;
    int32               epochDepth    = 7;
    bytes               tokens        = 8;
    EncryptedCoExpShare price         = 9;
    EncryptedCoExpShare volume        = 10;
    EncryptedCoExpShare minimumVolume = 11;
    bytes               nonce         = 12;
}

enum OrderType {
    Midpoint = 0;
    Limit    = 1;
}

enum OrderParity {
    Buy  = 0;
    Sell = 1;
}

enum OrderSettlement {
    Nil = 0;
    RenEx = 1;
    RenExAtomic = 2;
}

message EncryptedCoExpShare {
    bytes co  = 1;
    bytes exp = 2;
}

service StatusService {
    rpc Status (StatusRequest) returns (StatusResponse);
}

message StatusRequest {
}

message StatusResponse {
    string address      = 1;
    bool   bootstrapped = 2;
    int64  peers        = 3;
}